body {
  margin: 0;
}

img {
  max-width: 100%;
  width: 100%;
  height: 100%;
  object-fit: cover;
}

$bp : (
  mobile : 768px,
  desktop : 1440px
);

@mixin query($screen) {
  @each $key, $value in $bp {
    @if($screen == $key) {
      @media (max-width: $value) {@content;}
    }
  }
}

.grid {
  display: grid;
  grid-template-columns: repeat(12, 1fr);
  grid-auto-rows: 40vw;// dire aux lignes comment ce comport√©
  grid-gap: 1rem;
  padding: 1rem;
}



@media screen and (min-width: 768px) and (max-width: 1080px) {
  .grid {
    max-width: 80%;
    margin: 0 auto;
    grid-auto-rows: 25vw;
  }

  .item1 {
    grid-column: 1/9;
    grid-row: span 2;
  }

  .item2, .item3, .item7 {
    grid-column: 9/13;
  }

  .item4, .item5 {
    grid-column: span 8;
  }

  .item7 {
    grid-row: 3 / 5; // +  9 / 13
  }

  .item6  {
    grid-column: 1 / -1; // ou span 12 (prend tout la largeur du container parent)
    grid-row: span 2;

    img {
      object-position: 50% 30%;
    }
  }
}
@include query(mobile) {

  .item1, .item7  {
    grid-column: 1 / -1; // ou span 12 (prend tout la largeur du container parent)
  } 

  .item2, .item3, .item4, .item5, .item6   {
    grid-column: span 6 ; //chacune prend 6 colonnes sur les 12
  }

  // inverser .item2 et .item3
  .item2 {
    grid-column: 7 / 13;
  }

  .item3 {
    grid-row: 2 / 3;
  }

  .item5 {
    grid-row: 4 / 5;
  }

  .item6  {
    grid-row: 3 / 5;
  }

}

